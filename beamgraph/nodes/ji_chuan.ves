import "blueprint.pin" for Pin
import "blueprint.node" for Node
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant
import "beamgraph.variant" for PIN_TYPE_CHUAN
import "beamgraph.comp_nodes" for CompNodes
import "maths.vector" for Vector3

class JiChuan is Node
{
	init()
	{
		super.init()

		this.exports = [
			Pin(this, "next", PIN_TYPE_CHUAN),
		]

		this.params.add(NodeParam("column", false))

		this.layout()
	}

	resolve(bf)
	{
		var column = this.query_param("column").value
		if (column) {
			bf.column_idx.add(0)
		}
	}

	resolve2(bf)
	{
		var pos = Vector3(0, bf.height, 0)
		var ret = [ CompNodes.create_chuan(pos) ]

		var column = this.query_param("column").value
		if (column) {
			ret.add(CompNodes.create_column(pos, bf.height))
		}

		return Variant(ret)
	}

	get_title()
	{
		return "脊椽"
	}
}