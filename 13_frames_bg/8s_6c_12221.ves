var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../99_tools/9_edit_draw.ves")
node0.set_prop_value("ortho", false)

node0.op_node.cam.position.set(-0.067058000381294, 3.8957565891414, 9.6569348506975)
node0.op_node.cam.yaw = -85.5
node0.op_node.cam.pitch = -4.2
node0.op_node.cam.zoom = 45
node0.op_node.cam.update_vectors()
node0.op_node.speed = 0.21526837348938

_editor.add_node(node0, 380, 179.1)

var node1 = ::beamgraph::nodes::ji_tuan::JiTuan()

_editor.add_node(node1, -212.54545454545, 274.36363636364)

var node2 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node2, -391.90909090909, 184.54545454545)

var node3 = ::beamgraph::nodes::column::Column()

_editor.add_node(node3, -222.81818181818, 157.63636363636)

var node4 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node4, -118.09090909091, 201)

var node5 = ::beamgraph::nodes::beam::Beam()

_editor.add_node(node5, -211.231, 69.597454545454)

var node6 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node6, -490.83809592507, 71.48508661444)

var node7 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node7, -22.827794666132, 84.25101716853)

var node8 = ::beamgraph::nodes::column::Column()

_editor.add_node(node8, -514.72373037593, -226.01148191039)

var node9 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node9, 87.20009848855, 2.7097360784396)

var node10 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node10, -602.09080144709, -28.55390638872)

var node11 = ::beamgraph::nodes::beam::Beam()

_editor.add_node(node11, -378.13578069513, -30.616448181152)

var node12 = ::beamgraph::nodes::beam::Beam()

_editor.add_node(node12, -511.68386252994, -108.46829997514)

var node13 = ::beamgraph::nodes::beam::Beam()

_editor.add_node(node13, 52.729562566584, -110.24416421231)

var node14 = ::beamgraph::nodes::column::Column()

_editor.add_node(node14, -656.16355886009, -319.01824749201)

var node15 = ::beamgraph::nodes::column::Column()

_editor.add_node(node15, 192.0903807484, -311.34752784868)

var node16 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node16, -695.85130611035, -115.70586999841)

var node17 = ::beamgraph::nodes::tuan::Tuan()

_editor.add_node(node17, 201.84234008789, -86.498583984375)

var node18 = ::beamgraph::nodes::beam::Beam()

_editor.add_node(node18, 186.23788554244, -198.87703852983)

var node19 = ::beamgraph::nodes::beam::Beam()

_editor.add_node(node19, -639.57392822266, -216.54558349609)

var node20 = ::beamgraph::nodes::column::Column()

_editor.add_node(node20, 55.710514932935, -243.34527474699)

var node21 = ::beamgraph::nodes::beam::Beam()

_editor.add_node(node21, -45.73618449818, -33.504913080389)

var node22 = ::beamgraph::nodes::column::Column()

_editor.add_node(node22, -249.98442493786, -118.58216341192)

var node23 = ::beamgraph::nodes::column::Column()

_editor.add_node(node23, -177.06586242676, -120.89028259277)

Network.connect(node1, "left", node2, "around")
Network.connect(node1, "bottom", node3, "top")
Network.connect(node1, "right", node4, "around")
Network.connect(node2, "around", node5, "top")
Network.connect(node2, "around", node6, "around")
Network.connect(node3, "bottom", node5, "top")
Network.connect(node4, "around", node5, "top")
Network.connect(node4, "around", node7, "around")
Network.connect(node5, "bottom", node22, "top")
Network.connect(node5, "bottom", node23, "top")
Network.connect(node6, "around", node10, "around")
Network.connect(node6, "around", node11, "top")
Network.connect(node7, "around", node9, "around")
Network.connect(node9, "around", node13, "top")
Network.connect(node9, "around", node17, "around")
Network.connect(node10, "around", node12, "top")
Network.connect(node10, "around", node16, "around")
Network.connect(node11, "right", node22, "left")
Network.connect(node11, "bottom", node12, "top")
Network.connect(node12, "bottom", node8, "top")
Network.connect(node12, "right", node22, "left")
Network.connect(node13, "left", node23, "right")
Network.connect(node13, "bottom", node20, "top")
Network.connect(node15, "top", node18, "bottom")
Network.connect(node16, "around", node19, "top")
Network.connect(node17, "around", node18, "top")
Network.connect(node18, "left", node20, "right")
Network.connect(node19, "bottom", node14, "top")
Network.connect(node19, "right", node8, "left")
Network.connect(node21, "top", node7, "around")
Network.connect(node21, "bottom", node13, "top")
Network.connect(node22, "right", node23, "left")
Network.connect(node23, "right", node21, "left")
