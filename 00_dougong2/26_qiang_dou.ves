var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "22_jiaohu_dou.ves")

_editor.add_node(node0, -255, -41)

var node1 = ::geograph::nodes::boolean::Boolean()
node1.query_param("operator").value = "subtract"

_editor.add_node(node1, -7.1450561239512, -117.42718531187)

var node2 = ::geograph::nodes::box::Box()
node2.query_param("size").value.set(0.06, 0.15, 10)
node2.query_param("pos").value.set(0, 0, 0)
node2.query_param("offset_x").value = false
node2.query_param("offset_y").value = false
node2.query_param("offset_z").value = false

_editor.add_node(node2, -816.82343661052, -217.31701578742)

var node3 = ::geograph::nodes::rotate_x::RotateX()
node3.query_param("angle").value = "0"

_editor.add_node(node3, -407.58450907992, -209.10182981277)

var node4 = ::blueprint::nodes::subgraph::Subgraph()
node4.load_from_file(_editor, "../../tantien/assets/blueprints/geograph/translate_y.ves")

_editor.add_node(node4, -202.62914362427, -213.25841902755)

var node5 = ::blueprint::nodes::number::Number()

node5.value = 0.058

_editor.add_node(node5, -539.55100991845, -301.21388749914)

var node6 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node6, -402.39784049391, -292.35024317218)

var node7 = ::blueprint::nodes::subgraph::Subgraph()
node7.load_from_file(_editor, "01_ang_size.ves")

_editor.add_node(node7, -609.77411653827, -218.32331162435)

var node8 = ::blueprint::nodes::output::Output()

node8.var_name = "geo"
node8.var_type = "geo"

_editor.add_node(node8, 402.72502216158, -103.05662832784)

var node9 = ::geograph::nodes::brush_set_lock::BrushSetLock()

_editor.add_node(node9, 267.26284372503, -114.13008636944)

var node10 = ::blueprint::nodes::boolean::Boolean()

node10.value = true

_editor.add_node(node10, 131.53250752869, -157.03009364606)

var node11 = ::geograph::nodes::brush_merge::BrushMerge()

_editor.add_node(node11, 129.11458742552, -94.990701283495)

Blueprint.connect(node5, "v", node6, "v")
Blueprint.connect(node2, "geo", node3, "geo")
Blueprint.connect(node7, "ang_angle", node3, "angle")
Blueprint.connect(node3, "geo", node4, "geo")
Blueprint.connect(node6, "v", node4, "offset")
Blueprint.connect(node0, "geo", node1, "a")
Blueprint.connect(node4, "geo", node1, "b")
Blueprint.connect(node1, "geo", node11, "list")
Blueprint.connect(node11, "brush", node9, "geo")
Blueprint.connect(node10, "v", node9, "lock")
Blueprint.connect(node9, "geo", node8, "var")
