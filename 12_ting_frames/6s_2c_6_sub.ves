var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../99_tools/9_edit_draw.ves")

node0.op_node.cam.position.set(-0.41677091403135, 4.9952850950563, 15.469003893891)
node0.op_node.cam.yaw = -87.8
node0.op_node.cam.pitch = -1.5
node0.op_node.cam.zoom = 45
node0.op_node.cam.update_vectors()
node0.op_node.speed = 0.21526837348938

_editor.add_node(node0, -115.470421749, 225.540930645)

var node1 = ::tuangraph::nodes::ji_tuan::JiTuan()
node1.query_param("column").value = false

_editor.add_node(node1, -236.558855348, -40.210770764)

var node2 = ::tuangraph::nodes::tuan::Tuan()
node2.query_param("l_column").value = false
node2.query_param("r_column").value = false

_editor.add_node(node2, -101.558855348, -48.210770764)

var node3 = ::tuangraph::nodes::tuan::Tuan()
node3.query_param("l_column").value = false
node3.query_param("r_column").value = false

_editor.add_node(node3, 29.441144651999, -49.210770764)

var node4 = ::blueprint::nodes::commentary::Commentary()

node4.set_size(1006.003421324, 111.715895382)
node4.title = "六架椽通檐用二柱前后副阶"

_editor.add_node(node4, 159, 22)

var node5 = ::tuangraph::nodes::tuan::Tuan()
node5.query_param("l_column").value = true
node5.query_param("r_column").value = true

_editor.add_node(node5, 179.82786472, -48.568718455)

var node6 = ::tuangraph::nodes::sub_tuan::SubTuan()

_editor.add_node(node6, 318.39072703171, -28.285031909785)

var node7 = ::tuangraph::nodes::tuan::Tuan()
node7.query_param("l_column").value = false
node7.query_param("r_column").value = false

_editor.add_node(node7, 452.5522460959, -48.878064488522)

var node8 = ::tuangraph::nodes::tuan::Tuan()
node8.query_param("l_column").value = true
node8.query_param("r_column").value = true

_editor.add_node(node8, 590.98895919637, -48.658924884978)

Blueprint.connect(node1, "next", node2, "prev")
Blueprint.connect(node2, "next", node3, "prev")
Blueprint.connect(node3, "next", node5, "prev")
Blueprint.connect(node5, "next", node6, "prev")
Blueprint.connect(node6, "next", node7, "prev")
Blueprint.connect(node7, "next", node8, "prev")
