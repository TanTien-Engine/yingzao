var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../99_tools/9_assemble_draw.ves")
node0.set_prop_value("ortho", false)
node0.set_prop_value("offset", 1.8024517297745)

node0.op_node.cam.position.set(4.6122410688706, 0.19474242436087, 0.31681998274625)
node0.op_node.cam.yaw = -163
node0.op_node.cam.pitch = -5.2
node0.op_node.cam.zoom = 45
node0.op_node.cam.update_vectors()
node0.op_node.speed = 0.29386684298515

_editor.add_node(node0, -432.24658122556, -320.39905732599)

var node1 = ::gonggraph::component::lu_dou::LuDou()

_editor.add_node(node1, -280.65835809166, 76.208624327572)

var node2 = ::gonggraph::component::inner_gong::InnerGong()

_editor.add_node(node2, -143.64767236824, 211.86038952548)

var node3 = ::gonggraph::component::inner_gong::InnerGong()

_editor.add_node(node3, -2.6736921283049, 210.1528541591)

var node4 = ::gonggraph::component::fang::Fang()

_editor.add_node(node4, 132.89783631407, 209.96454709934)

var node5 = ::blueprint::nodes::commentary::Commentary()

node5.set_size(565.7370803426, 334.22619999324)
node5.title = "四铺作重栱出卷头，并计心"

_editor.add_node(node5, -73.510328160386, 248.15007750509)

var node6 = ::gonggraph::component::beam::Beam()

_editor.add_node(node6, -279.11719216896, -66.237838129389)

var node7 = ::gonggraph::tools::comp_ref::CompRef()
node7.query_param("y").value = 1
node7.query_param("x").value = 0
node7.query_param("inner").value = false

_editor.add_node(node7, -136.82851643477, -331.98335715933)

var node8 = ::gonggraph::style::beam_style::BeamStyle()
node8.query_param("h").value = 0.42
node8.query_param("stright").value = true
node8.query_param("shrink").value = false
node8.query_param("left").value = false

_editor.add_node(node8, 7.6817941450187, -342.79827546147)

var node9 = ::gonggraph::tools::vert_merge::VertMerge()

_editor.add_node(node9, -140.71112993408, -27.42987692752)

var node10 = ::gonggraph::component::hua_gong::HuaGong()

_editor.add_node(node10, -281.1386990064, -2.3532581142601)

var node11 = ::gonggraph::component::shua_tou::ShuaTou()

_editor.add_node(node11, -139.34521720324, 144.31410383244)

var node12 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node12, -4.257581200144, -8.5121149065701)

var node13 = ::gonggraph::component::fang::Fang()

_editor.add_node(node13, 129.47643772323, -8.5121148320501)

var node14 = ::gonggraph::tools::vert_merge::VertMerge()

_editor.add_node(node14, -5.220101108796, 79.437218537133)

var node15 = ::gonggraph::tools::dummy_vert::DummyVert()

_editor.add_node(node15, -140.29070905472, 59.530281948488)

var node16 = ::gonggraph::component::chen_fang_tou::ChenFangTou()

_editor.add_node(node16, 127.01131423641, 78.685909101456)

var node17 = ::gonggraph::tools::comp_ref::CompRef()
node17.query_param("y").value = 3
node17.query_param("x").value = 0
node17.query_param("inner").value = false

_editor.add_node(node17, -130.62206665039, -485.42080688477)

var node18 = ::gonggraph::style::chen_fang_style::ChenFangStyle()
node18.query_param("full_h").value = true
node18.query_param("head_o").value = true
node18.query_param("head_i").value = false

_editor.add_node(node18, 21.016775512695, -488.57667236328)

var node19 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node19, -5.4675812001441, -60.54211490657)

var node20 = ::gonggraph::component::fang::Fang()

_editor.add_node(node20, 128.26643772323, -60.54211483205)

Blueprint.connect(node17, "comp", node18, "fang")
Blueprint.connect(node7, "comp", node8, "beam")
Blueprint.connect(node1, "vert", node9, "prev")
Blueprint.connect(node10, "next", node9, "outer")
Blueprint.connect(node6, "next", node9, "inner")
Blueprint.connect(node9, "inner", node19, "prev")
Blueprint.connect(node19, "next", node20, "prev")
Blueprint.connect(node9, "next", node14, "prev")
Blueprint.connect(node11, "next", node14, "outer")
Blueprint.connect(node15, "next", node14, "inner")
Blueprint.connect(node14, "next", node16, "prev")
Blueprint.connect(node9, "outer", node12, "prev")
Blueprint.connect(node12, "next", node13, "prev")
Blueprint.connect(node1, "hori", node2, "prev")
Blueprint.connect(node2, "next", node3, "prev")
Blueprint.connect(node3, "next", node4, "prev")
