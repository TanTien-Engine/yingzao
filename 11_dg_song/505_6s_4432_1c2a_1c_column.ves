var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../99_tools/9_assemble_draw.ves")
node0.set_prop_value("ortho", false)
node0.set_prop_value("offset", 6.211033821106)

node0.op_node.cam.position.set(3.8506144534079, 1.4532000349083, 0.55049523512659)
node0.op_node.cam.yaw = -155.5
node0.op_node.cam.pitch = -10.1
node0.op_node.cam.zoom = 45
node0.op_node.cam.update_vectors()
node0.op_node.speed = 0.29386684298515

_editor.add_node(node0, -677.67311895046, -280.24042073629)

var node1 = ::gonggraph::component::lu_dou::LuDou()

_editor.add_node(node1, -290.01989077385, 272.54905483095)

var node2 = ::gonggraph::component::inner_gong::InnerGong()

_editor.add_node(node2, -155.65383314961, 336.70570357508)

var node3 = ::gonggraph::component::inner_gong::InnerGong()

_editor.add_node(node3, -24.446945321387, 334.9981682087)

var node4 = ::gonggraph::component::fang::Fang()

_editor.add_node(node4, 112.92773864315, 334.20880930821)

var node5 = ::blueprint::nodes::commentary::Commentary()

node5.set_size(942.93119454245, 368.43772666491)
node5.title = "六铺作重栱出单抄双下昂计心，里转出一抄偷心"

_editor.add_node(node5, 116.6474479478, 370.70275443973)

var node6 = ::gonggraph::tools::comp_ref::CompRef()
node6.query_param("y").value = 5
node6.query_param("x").value = 0
node6.query_param("inner").value = false

_editor.add_node(node6, -294.11587166016, -469.36147273438)

var node7 = ::gonggraph::tools::comp_ref::CompRef()
node7.query_param("y").value = 5
node7.query_param("x").value = 1
node7.query_param("inner").value = false

_editor.add_node(node7, -293.31555083651, -382.3815228156)

var node8 = ::gonggraph::tools::hori_conn::HoriConn()

_editor.add_node(node8, -139.04950866699, -415.94945678711)

var node9 = ::gonggraph::tools::vert_split::VertSplit()

_editor.add_node(node9, -152.31330034858, 171.29876121135)

var node10 = ::gonggraph::component::ang::Ang()

_editor.add_node(node10, -19.06815250069, 181.23882112118)

var node11 = ::gonggraph::component::hua_gong::HuaGong()

_editor.add_node(node11, -151.41040472311, 90.805870507397)

var node12 = ::gonggraph::style::ang_slope::AngSlope()
node12.query_param("ang_slope").value = 0.375

_editor.add_node(node12, -487.27587890625, -434.0094909668)

var node13 = ::gonggraph::component::shua_tou::ShuaTou()

_editor.add_node(node13, 250.89399738956, 259.24199131701)

var node14 = ::gonggraph::component::chen_fang_tou::ChenFangTou()

_editor.add_node(node14, 385.67935351709, 258.97476471163)

var node15 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node15, 253.446776199, 138.40128919629)

var node16 = ::gonggraph::style::step_length::StepLength()
node16.query_param("outer").value = [ 0.3, 0.3, 0.3, 0.3, 0.3 ]
node16.query_param("inner").value = [ 0.3, 0.15, 0.15, 0.15, 0.35 ]

_editor.add_node(node16, -482.50674560547, -364.63726318359)

var node17 = ::gonggraph::component::ti_mu::TiMu()

_editor.add_node(node17, 387.96927122464, 136.19407438017)

var node18 = ::gonggraph::component::chuan::Chuan()

_editor.add_node(node18, 520.96927122464, 135.19407438017)

var node19 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node19, 253.25870032994, 190.8770211017)

var node20 = ::gonggraph::component::liao_yan_fang::LiaoYanFang()

_editor.add_node(node20, 391.63142760267, 188.14974854783)

var node21 = ::gonggraph::component::ang::Ang()

_editor.add_node(node21, 114.15305161566, 221.60937050032)

var node22 = ::gonggraph::component::fang::Fang()

_editor.add_node(node22, 246.85846706193, 334.09447797378)

var node23 = ::gonggraph::component::fang::Fang()

_editor.add_node(node23, 382.84645329339, 333.34316826297)

var node24 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node24, -15.896314091041, 27.410629352711)

var node25 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node25, 121.21864437617, 28.462470108365)

var node26 = ::gonggraph::component::fang::Fang()

_editor.add_node(node26, 254.20136113214, 26.959837950056)

var node27 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node27, 122.33022474695, 83.936464390228)

var node28 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node28, 254.56163446325, 83.185162337466)

var node29 = ::gonggraph::component::fang::Fang()

_editor.add_node(node29, 384.88776974008, 83.936466992591)

var node30 = ::gonggraph::component::cheng_chuan_fang::ChengChuanFang()

_editor.add_node(node30, 520.54052729789, 332.77727728083)

var node31 = ::gonggraph::component::beam::Beam()

_editor.add_node(node31, -16.748778187145, 99.94483087713)

var node32 = ::gonggraph::tools::comp_ref::CompRef()
node32.query_param("y").value = 2
node32.query_param("x").value = 0
node32.query_param("inner").value = true

_editor.add_node(node32, 83.109990900214, -291.18835587935)

var node33 = ::gonggraph::style::beam_style::BeamStyle()
node33.query_param("h").value = 0.42
node33.query_param("stright").value = true
node33.query_param("shrink").value = false

_editor.add_node(node33, 218.3329856179, -291.28705388849)

Blueprint.connect(node32, "comp", node33, "beam")
Blueprint.connect(node7, "comp", node8, "left")
Blueprint.connect(node6, "comp", node8, "right")
Blueprint.connect(node1, "vert", node11, "prev")
Blueprint.connect(node11, "outer", node24, "prev")
Blueprint.connect(node24, "next", node25, "prev")
Blueprint.connect(node25, "next", node26, "prev")
Blueprint.connect(node11, "next", node9, "prev")
Blueprint.connect(node9, "inner", node31, "prev")
Blueprint.connect(node9, "outer", node10, "prev")
Blueprint.connect(node10, "outer", node27, "prev")
Blueprint.connect(node27, "next", node28, "prev")
Blueprint.connect(node28, "next", node29, "prev")
Blueprint.connect(node10, "next", node21, "prev")
Blueprint.connect(node21, "outer", node19, "prev")
Blueprint.connect(node19, "next", node20, "prev")
Blueprint.connect(node21, "inner", node15, "prev")
Blueprint.connect(node15, "next", node17, "prev")
Blueprint.connect(node17, "next", node18, "prev")
Blueprint.connect(node21, "next", node13, "prev")
Blueprint.connect(node13, "next", node14, "prev")
Blueprint.connect(node1, "hori", node2, "prev")
Blueprint.connect(node2, "next", node3, "prev")
Blueprint.connect(node3, "next", node4, "prev")
Blueprint.connect(node4, "next", node22, "prev")
Blueprint.connect(node22, "next", node23, "prev")
Blueprint.connect(node23, "next", node30, "prev")
