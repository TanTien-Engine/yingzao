var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../99_tools/9_assemble_draw.ves")
node0.set_prop_value("ortho", false)
node0.set_prop_value("offset", 10.295602798462)

node0.op_node.cam.position.set(0.97033829429962, 5.5670049284713, -0.2130717109745)
node0.op_node.cam.yaw = -142.7
node0.op_node.cam.pitch = -78.3
node0.op_node.cam.zoom = 45
node0.op_node.cam.update_vectors()
node0.op_node.speed = 0.29386684298515

_editor.add_node(node0, -432.24658122556, -320.39905732599)

var node1 = ::archgraph::component::lu_dou::LuDou()

_editor.add_node(node1, -55.925449672118, -421.92073421099)

var node2 = ::archgraph::component::inner_gong::InnerGong()

_editor.add_node(node2, 70.361924802075, -244.12703881706)

var node3 = ::archgraph::component::inner_gong::InnerGong()

_editor.add_node(node3, 206.37722735606, -243.35523534046)

var node4 = ::archgraph::component::fang::Fang()

_editor.add_node(node4, 341.12230951744, -244.36998868122)

var node5 = ::blueprint::nodes::commentary::Commentary()

node5.set_size(814.64937092144, 500.89119226487)
node5.title = "六铺作重栱出三抄，里转五铺作重栱出两抄，并计心"

_editor.add_node(node5, 282.79246946071, -206.19724672571)

var node6 = ::archgraph::component::hua_gong::HuaGong()

_editor.add_node(node6, 75.056407847176, -574.37137735595)

var node7 = ::archgraph::component::shua_tou::ShuaTou()

_editor.add_node(node7, 341.0883864619, -310.28839320263)

var node8 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node8, 348.04184168863, -588.41735458971)

var node9 = ::archgraph::component::fang::Fang()

_editor.add_node(node9, 477.57116147945, -587.09605815565)

var node10 = ::archgraph::tools::comp_ref::CompRef()
node10.query_param("y").value = 5
node10.query_param("x").value = 0
node10.query_param("inner").value = false

_editor.add_node(node10, -474.26206665039, -767.62080688477)

var node11 = ::archgraph::style::chen_fang_style::ChenFangStyle()
node11.query_param("full_h").value = true
node11.query_param("head_o").value = true
node11.query_param("head_i").value = true

_editor.add_node(node11, -335.32822448731, -769.20367236328)

var node12 = ::archgraph::tools::vert_merge::VertMerge()

_editor.add_node(node12, 474.87169381212, -415.13629191099)

var node13 = ::archgraph::component::chen_fang_tou::ChenFangTou()

_editor.add_node(node13, 342.17607289365, -395.03068959071)

var node14 = ::archgraph::tools::comp_ref::CompRef()
node14.query_param("y").value = 4
node14.query_param("x").value = 0
node14.query_param("inner").value = false

_editor.add_node(node14, -472.26206665039, -626.62080688477)

var node15 = ::archgraph::style::chen_fang_style::ChenFangStyle()
node15.query_param("full_h").value = true
node15.query_param("head_o").value = true
node15.query_param("head_i").value = true

_editor.add_node(node15, -333.32822448731, -628.20367236328)

var node16 = ::archgraph::component::hua_gong::HuaGong()

_editor.add_node(node16, 215.86432584109, -534.25375725961)

var node17 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node17, 476.68387369723, -481.19290522926)

var node18 = ::archgraph::component::fang::Fang()

_editor.add_node(node18, 607.39486138499, -481.69562309641)

var node19 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node19, 214.2452377588, -682.12095579483)

var node20 = ::archgraph::component::fang::Fang()

_editor.add_node(node20, 477.65885507027, -679.97321307978)

var node21 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node21, 344.76793296019, -679.6568622295)

var node22 = ::archgraph::component::chen_fang_tou::ChenFangTou()

_editor.add_node(node22, 605.28751102591, -416.72280666408)

var node23 = ::archgraph::tools::vert_merge::VertMerge()

_editor.add_node(node23, 348.39441689383, -478.4486412317)

var node24 = ::archgraph::component::hua_gong::HuaGong()

_editor.add_node(node24, 213.4367533459, -357.52441960667)

var node25 = ::archgraph::component::shua_tou::ShuaTou()

_editor.add_node(node25, 214.66938564477, -447.9597358862)

var node26 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node26, 216.34891920132, -636.21562145975)

var node27 = ::archgraph::component::fang::Fang()

_editor.add_node(node27, 475.63030510784, -634.89432502569)

var node28 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node28, 344.99332740047, -633.82665937451)

var node29 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node29, 346.08842320629, -542.51202025462)

var node30 = ::archgraph::component::fang::Fang()

_editor.add_node(node30, 611.98137936074, -542.01717010155)

var node31 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node31, 479.09045725066, -541.70081925127)

var node32 = ::archgraph::style::corner_style::CornerStyle()
node32.query_param("no_you").value = true

_editor.add_node(node32, 211.29783691406, -807.63571618652)

Blueprint.connect(node14, "comp", node15, "fang")
Blueprint.connect(node10, "comp", node11, "fang")
Blueprint.connect(node1, "vert", node6, "prev")
Blueprint.connect(node6, "outer", node26, "prev")
Blueprint.connect(node26, "next", node28, "prev")
Blueprint.connect(node28, "next", node27, "prev")
Blueprint.connect(node6, "inner", node19, "prev")
Blueprint.connect(node19, "next", node21, "prev")
Blueprint.connect(node21, "next", node20, "prev")
Blueprint.connect(node6, "next", node16, "prev")
Blueprint.connect(node16, "outer", node29, "prev")
Blueprint.connect(node29, "next", node31, "prev")
Blueprint.connect(node31, "next", node30, "prev")
Blueprint.connect(node16, "next", node23, "prev")
Blueprint.connect(node24, "next", node23, "outer")
Blueprint.connect(node25, "next", node23, "inner")
Blueprint.connect(node23, "outer", node17, "prev")
Blueprint.connect(node17, "next", node18, "prev")
Blueprint.connect(node23, "next", node12, "prev")
Blueprint.connect(node7, "next", node12, "outer")
Blueprint.connect(node13, "next", node12, "inner")
Blueprint.connect(node12, "next", node22, "prev")
Blueprint.connect(node16, "inner", node8, "prev")
Blueprint.connect(node8, "next", node9, "prev")
Blueprint.connect(node1, "hori", node2, "prev")
Blueprint.connect(node2, "next", node3, "prev")
Blueprint.connect(node3, "next", node4, "prev")
