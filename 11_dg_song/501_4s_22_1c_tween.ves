var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../99_tools/9_assemble_draw.ves")
node0.set_prop_value("ortho", false)
node0.set_prop_value("offset", 4.279468536377)

node0.op_node.cam.position.set(2.0084698990585, 2.466367301578, 1.385013312628)
node0.op_node.cam.yaw = -133.8
node0.op_node.cam.pitch = -31.6
node0.op_node.cam.zoom = 45
node0.op_node.cam.update_vectors()
node0.op_node.speed = 0.29386684298515

_editor.add_node(node0, -677.20661157025, -280.24042073629)

var node1 = ::gonggraph::component::lu_dou::LuDou()

_editor.add_node(node1, -380.24521008264, 37.509150247933)

var node2 = ::gonggraph::component::inner_gong::InnerGong()

_editor.add_node(node2, -243.62520805569, 90.396076978533)

var node3 = ::gonggraph::component::inner_gong::InnerGong()

_editor.add_node(node3, -113.16963502838, 92.445115616663)

var node4 = ::gonggraph::component::fang::Fang()

_editor.add_node(node4, 25.707678537965, 94.661015919783)

var node5 = ::blueprint::nodes::commentary::Commentary()

node5.set_size(816.40857996694, 302.29016843802)
node5.title = "四铺作里外并一抄卷头，里转出挑杆，壁内用重栱"

_editor.add_node(node5, -49.468254531535, 131.69628336535)

var node6 = ::gonggraph::component::cheng_chuan_fang::ChengChuanFang()

_editor.add_node(node6, 160.31745667574, 94.603242596284)

var node7 = ::gonggraph::tools::comp_ref::CompRef()
node7.query_param("y").value = 3
node7.query_param("x").value = 0
node7.query_param("inner").value = false

_editor.add_node(node7, -294.11587166016, -469.36147273438)

var node8 = ::gonggraph::tools::comp_ref::CompRef()
node8.query_param("y").value = 3
node8.query_param("x").value = 1
node8.query_param("inner").value = false

_editor.add_node(node8, -293.31555083651, -382.3815228156)

var node9 = ::gonggraph::tools::hori_conn::HoriConn()

_editor.add_node(node9, -139.04950866699, -415.94945678711)

var node10 = ::gonggraph::component::ang::Ang()

_editor.add_node(node10, -103.03598939708, -65.49313318522)

var node11 = ::gonggraph::component::hua_gong::HuaGong()

_editor.add_node(node11, -239.68107612533, -85.562440605233)

var node12 = ::gonggraph::style::ang_slope::AngSlope()
node12.query_param("ang_slope").value = 0.5625

_editor.add_node(node12, -487.27587890625, -434.0094909668)

var node13 = ::gonggraph::component::shua_tou::ShuaTou()

_editor.add_node(node13, -104.69623952579, 20.582440162406)

var node14 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node14, -105.38302158324, -141.30782778401)

var node15 = ::gonggraph::component::liao_yan_fang::LiaoYanFang()

_editor.add_node(node15, 29.327722218411, -142.13427456943)

var node16 = ::gonggraph::component::chen_fang_tou::ChenFangTou()

_editor.add_node(node16, 24.922740733225, 20.980717031082)

var node17 = ::gonggraph::component::hori_gong::HoriGong()

_editor.add_node(node17, 26.849405800805, -86.619231464872)

var node18 = ::gonggraph::style::step_length::StepLength()
node18.query_param("outer").value = [ 0.3, 0.3, 0.3, 0.3, 0.3 ]
node18.query_param("inner").value = [ 0.3, 0.7, 0.3, 0.3, 0.3 ]

_editor.add_node(node18, -482.50674560547, -364.63726318359)

var node19 = ::gonggraph::component::ti_mu::TiMu()

_editor.add_node(node19, 161.37190082645, -88.826446280992)

var node20 = ::gonggraph::component::chuan::Chuan()

_editor.add_node(node20, 293.54545454545, -89.826446280992)

var node21 = ::gonggraph::tools::vert_split::VertSplit()

_editor.add_node(node21, -241.67023266822, -7.8700629161944)

Blueprint.connect(node8, "comp", node9, "left")
Blueprint.connect(node7, "comp", node9, "right")
Blueprint.connect(node1, "vert", node11, "prev")
Blueprint.connect(node11, "next", node21, "prev")
Blueprint.connect(node21, "outer", node13, "prev")
Blueprint.connect(node13, "next", node16, "prev")
Blueprint.connect(node21, "inner", node10, "prev")
Blueprint.connect(node10, "inner", node17, "prev")
Blueprint.connect(node17, "next", node19, "prev")
Blueprint.connect(node19, "next", node20, "prev")
Blueprint.connect(node11, "outer", node14, "prev")
Blueprint.connect(node14, "next", node15, "prev")
Blueprint.connect(node1, "hori", node2, "prev")
Blueprint.connect(node2, "next", node3, "prev")
Blueprint.connect(node3, "next", node4, "prev")
Blueprint.connect(node4, "next", node6, "prev")
