var node0 = ::blueprint::nodes::subgraph::Subgraph()
node0.load_from_file(_editor, "../99_tools/9_assemble_draw.ves")
node0.set_prop_value("ortho", true)
node0.set_prop_value("offset", 2.7941315174103)

node0.op_node.cam.position.set(2.0844677434084, 1.6671785527157, 0.072346033269349)
node0.op_node.cam.yaw = -168.5
node0.op_node.cam.pitch = -23.5
node0.op_node.cam.zoom = 45
node0.op_node.cam.update_vectors()
node0.op_node.speed = 0.29386684298515

_editor.add_node(node0, -538.49504217085, -244.30137997027)

var node1 = ::archgraph::component::lu_dou::LuDou()

_editor.add_node(node1, -229.87457283108, 134.16167398265)

var node2 = ::archgraph::component::inner_gong::InnerGong()

_editor.add_node(node2, -93.254570804134, 187.04860071325)

var node3 = ::archgraph::component::inner_gong::InnerGong()

_editor.add_node(node3, 37.201002223174, 189.09763935138)

var node4 = ::archgraph::component::fang::Fang()

_editor.add_node(node4, 176.07831578952, 191.3135396545)

var node5 = ::blueprint::nodes::commentary::Commentary()

node5.set_size(558.83869566942, 306.29102118032)
node5.title = "四铺作里外跳俱匀"

_editor.add_node(node5, -18.556670623332, 228.34880710007)

var node6 = ::archgraph::component::hua_gong::HuaGong()

_editor.add_node(node6, -92.64898132306, -14.510367659396)

var node7 = ::archgraph::style::step_length::StepLength()
node7.query_param("outer").value = [ 0.28, 0.25, 0.25, 0.25, 0.25 ]
node7.query_param("inner").value = [ 0.28, 0.25, 0.25, 0.25, 0.25 ]

_editor.add_node(node7, -482.32393551855, -152.12321568495)

var node8 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node8, 44.835027743503, -4.774438918662)

var node9 = ::archgraph::component::hori_gong::HoriGong()

_editor.add_node(node9, 45.449728424091, -51.902372291366)

var node10 = ::archgraph::component::fang::Fang()

_editor.add_node(node10, 177.27133034909, -3.818225148307)

var node11 = ::archgraph::component::fang::Fang()

_editor.add_node(node11, 179.93507749887, -53.268389931765)

var node12 = ::archgraph::tools::comp_ref::CompRef()
node12.query_param("y").value = 2
node12.query_param("x").value = 0
node12.query_param("inner").value = false

_editor.add_node(node12, -163.08901517819, -201.40275503651)

var node13 = ::archgraph::style::beam_style::BeamStyle()
node13.query_param("h").value = 0.36
node13.query_param("stright").value = true
node13.query_param("shrink").value = false
node13.query_param("left").value = true

_editor.add_node(node13, 25.178122356366, -183.14876560409)

var node14 = ::archgraph::tools::vert_split::VertSplit()

_editor.add_node(node14, -96.54206791397, 85.889277560652)

var node15 = ::archgraph::component::beam::Beam()

_editor.add_node(node15, 43.127355276061, 112.33555830018)

var node16 = ::archgraph::component::beam::Beam()

_editor.add_node(node16, 44.780243298239, 52.004979661674)

var node17 = ::archgraph::tools::comp_ref::CompRef()
node17.query_param("y").value = 2
node17.query_param("x").value = 0
node17.query_param("inner").value = true

_editor.add_node(node17, -161.12688569284, -345.46368258023)

var node18 = ::archgraph::style::beam_style::BeamStyle()
node18.query_param("h").value = 0.36
node18.query_param("stright").value = true
node18.query_param("shrink").value = false
node18.query_param("left").value = false

_editor.add_node(node18, 22.755925511705, -377.9468563547)

var node19 = ::archgraph::tools::hori_conn::HoriConn()

_editor.add_node(node19, 24.353199925125, -278.2636516293)

Blueprint.connect(node17, "comp", node18, "beam")
Blueprint.connect(node12, "comp", node19, "left")
Blueprint.connect(node17, "comp", node19, "right")
Blueprint.connect(node12, "comp", node13, "beam")
Blueprint.connect(node1, "vert", node6, "prev")
Blueprint.connect(node6, "next", node14, "prev")
Blueprint.connect(node14, "inner", node16, "prev")
Blueprint.connect(node14, "outer", node15, "prev")
Blueprint.connect(node6, "inner", node9, "prev")
Blueprint.connect(node9, "next", node11, "prev")
Blueprint.connect(node6, "outer", node8, "prev")
Blueprint.connect(node8, "next", node10, "prev")
Blueprint.connect(node1, "hori", node2, "prev")
Blueprint.connect(node2, "next", node3, "prev")
Blueprint.connect(node3, "next", node4, "prev")
