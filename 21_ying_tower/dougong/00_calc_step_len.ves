var node0 = ::blueprint::nodes::func_in::FuncIn()

node0.var_name = "step"
node0.var_type = "int"

_editor.add_node(node0, -398.45669999995, 140.07718645154)

var node1 = ::blueprint::nodes::func_out::FuncOut()

node1.var_name = "len"
node1.var_type = "num"

_editor.add_node(node1, 25.920958188189, -235.05542184448)

var node2 = ::blueprint::nodes::function::Function()

node2.set_size(605.17805773907, 507.68133580623)
node2.title = "calc_step_len"

_editor.add_node(node2, -191.72594398605, 192.9880801818)

var node3 = ::blueprint::nodes::output::Output()

node3.var_name = "func"
node3.var_type = "func"

_editor.add_node(node3, 249.86798721262, 188.8481751991)

var node4 = ::blueprint::nodes::switch_f::SwitchF()

_editor.add_node(node4, -249.52424596096, 68.095442922142)

var node5 = ::blueprint::nodes::number::Number()

node5.value = 0.21

_editor.add_node(node5, -399.07346477287, 73.429776116961)

var node6 = ::blueprint::nodes::number::Number()

node6.value = 0

_editor.add_node(node6, -395.31688324787, 8.0653885646307)

var node7 = ::blueprint::nodes::number::Number()

node7.value = 0.29

_editor.add_node(node7, -397.57082241146, -58.050324645159)

var node8 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node8, -108.92186836226, -258.33168849472)

var node9 = ::blueprint::nodes::property::Property()

node9.var_name = "rot"
node9.var_type = "bool"

_editor.add_node(node9, -250.48242847836, -252.33733676879)

var node10 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node10, -381.05933446822, -155.52258427734)

var node11 = ::blueprint::nodes::cos::Cos()

_editor.add_node(node11, -246.57398746845, -113.44895079534)

var node12 = ::blueprint::nodes::number::Number()

node12.value = 1

_editor.add_node(node12, -244.85946990944, -49.972436431726)

var node13 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node13, -109.72297252715, -71.209629763293)

var node14 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node14, -104.95540959955, 108.73870744139)

Blueprint.connect(node10, "pi/6", node11, "v")
Blueprint.connect(node12, "v", node13, "a")
Blueprint.connect(node11, "v", node13, "b")
Blueprint.connect(node2, "func", node3, "var")
Blueprint.connect(node0, "var", node4, "type")
Blueprint.connect(node5, "v", node4, "default")
Blueprint.connect(node6, "v", node4, "case0")
Blueprint.connect(node7, "v", node4, "case1")
Blueprint.connect(node4, "result", node14, "a")
Blueprint.connect(node13, "v", node14, "b")
Blueprint.connect(node9, "var", node8, "cond")
Blueprint.connect(node14, "v", node8, "true")
Blueprint.connect(node4, "result", node8, "false")
Blueprint.connect(node8, "result", node1, "var")
