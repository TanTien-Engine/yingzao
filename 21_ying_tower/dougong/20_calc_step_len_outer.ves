var node0 = ::blueprint::nodes::func_in::FuncIn()

node0.var_name = "step"
node0.var_type = "int"

_editor.add_node(node0, -830.53438999995, 178.27365245154)

var node1 = ::blueprint::nodes::func_out::FuncOut()

node1.var_name = "len"
node1.var_type = "num"

_editor.add_node(node1, 354.11378884935, -89.81565005936)

var node2 = ::blueprint::nodes::function::Function()

node2.set_size(1391.8201109622, 1056.3924783682)
node2.title = "calc_step_len"

_editor.add_node(node2, -211.19363398605, 249.8185461818)

var node3 = ::blueprint::nodes::output::Output()

node3.var_name = "func"
node3.var_type = "func"

_editor.add_node(node3, 747.66198721262, 242.0881751991)

var node4 = ::blueprint::nodes::switch_f::SwitchF()

_editor.add_node(node4, -638.5591852051, -581.30075814825)

var node5 = ::blueprint::nodes::number::Number()

node5.value = 1

_editor.add_node(node5, -785.91593082529, -425.55320181294)

var node6 = ::blueprint::nodes::number::Number()

node6.value = 0

_editor.add_node(node6, -780.21959108705, -494.22337448923)

var node7 = ::blueprint::nodes::number::Number()

node7.value = 0.29

_editor.add_node(node7, -782.47353025064, -560.33908769902)

var node8 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node8, 219.2709622989, -113.0919167096)

var node9 = ::blueprint::nodes::property::Property()

node9.var_name = "rot"
node9.var_type = "bool"

_editor.add_node(node9, 23.3704021828, 68.352435016331)

var node10 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node10, -398.27719802194, -404.25923397982)

var node11 = ::blueprint::nodes::cos::Cos()

_editor.add_node(node11, -255.78358655936, -436.69799719203)

var node12 = ::blueprint::nodes::number::Number()

node12.value = 1

_editor.add_node(node12, -254.06906900035, -373.22148282842)

var node13 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node13, -112.93257161806, -362.45867615999)

var node14 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node14, 32.880156598799, -281.883851352)

var node15 = ::blueprint::nodes::number::Number()

node15.value = 0.22

_editor.add_node(node15, -780.58542061424, -625.45424558168)

var node16 = ::blueprint::nodes::number::Number()

node16.value = 0.26

_editor.add_node(node16, -778.11003364385, -704.48346412686)

var node17 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node17, -366.56997604125, -92.70083193833)

var node18 = ::blueprint::nodes::compare::Compare()

node18.cmp = "greater"

_editor.add_node(node18, -513.29032829125, 160.0060374779)

var node19 = ::blueprint::nodes::integer::Integer()

node19.value = 0

_editor.add_node(node19, -648.15336197699, 123.53364695002)

var node20 = ::blueprint::nodes::switch_f::SwitchF()

_editor.add_node(node20, -644.04640092705, -66.671499058359)

var node21 = ::blueprint::nodes::number::Number()

node21.value = 1

_editor.add_node(node21, -791.8710797509, -0.87708321790006)

var node22 = ::blueprint::nodes::number::Number()

node22.value = 0

_editor.add_node(node22, -790.30621637526, -64.379643294292)

var node23 = ::blueprint::nodes::number::Number()

node23.value = 0.29

_editor.add_node(node23, -789.47976605888, -129.66889142188)

var node24 = ::blueprint::nodes::number::Number()

node24.value = 0.2

_editor.add_node(node24, -790.30621687968, -193.30526363343)

var node25 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node25, -631.27653172666, -421.15268263815)

var node26 = ::blueprint::nodes::number::Number()

node26.value = 0.28

_editor.add_node(node26, -792.14051643471, -257.3367556907)

var node27 = ::blueprint::nodes::number::Number()

node27.value = 0.29

_editor.add_node(node27, -794.52328117187, -325.19891787109)

Blueprint.connect(node10, "pi/6", node11, "v")
Blueprint.connect(node12, "v", node13, "a")
Blueprint.connect(node11, "v", node13, "b")
Blueprint.connect(node2, "func", node3, "var")
Blueprint.connect(node0, "var", node25, "v")
Blueprint.connect(node25, "v", node4, "type")
Blueprint.connect(node5, "v", node4, "default")
Blueprint.connect(node6, "v", node4, "case0")
Blueprint.connect(node7, "v", node4, "case1")
Blueprint.connect(node15, "v", node4, "case2")
Blueprint.connect(node16, "v", node4, "case3")
Blueprint.connect(node16, "v", node4, "case4")
Blueprint.connect(node0, "var", node20, "type")
Blueprint.connect(node21, "v", node20, "default")
Blueprint.connect(node22, "v", node20, "case0")
Blueprint.connect(node23, "v", node20, "case1")
Blueprint.connect(node24, "v", node20, "case2")
Blueprint.connect(node26, "v", node20, "case3")
Blueprint.connect(node27, "v", node20, "case4")
Blueprint.connect(node0, "var", node18, "a")
Blueprint.connect(node19, "v", node18, "b")
Blueprint.connect(node18, "out", node17, "cond")
Blueprint.connect(node20, "result", node17, "true")
Blueprint.connect(node4, "result", node17, "false")
Blueprint.connect(node17, "result", node14, "a")
Blueprint.connect(node13, "v", node14, "b")
Blueprint.connect(node9, "var", node8, "cond")
Blueprint.connect(node14, "v", node8, "true")
Blueprint.connect(node17, "result", node8, "false")
Blueprint.connect(node8, "result", node1, "var")
