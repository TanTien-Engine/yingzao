var node0 = ::blueprint::nodes::func_in::FuncIn()

node0.var_name = "step"
node0.var_type = "int"

_editor.add_node(node0, -817.65030999995, 162.16855245154)

var node1 = ::blueprint::nodes::func_out::FuncOut()

node1.var_name = "len"
node1.var_type = "num"

_editor.add_node(node1, 366.99786884935, -105.92075005936)

var node2 = ::blueprint::nodes::function::Function()

node2.set_size(1449.7984709622, 935.6042283682)
node2.title = "calc_step_len"

_editor.add_node(node2, -198.30955398605, 233.7134461818)

var node3 = ::blueprint::nodes::output::Output()

node3.var_name = "func"
node3.var_type = "func"

_editor.add_node(node3, 747.66198721262, 242.0881751991)

var node4 = ::blueprint::nodes::switch_f::SwitchF()

_editor.add_node(node4, -628.8961252051, -621.56350814825)

var node5 = ::blueprint::nodes::number::Number()

node5.value = 1

_editor.add_node(node5, -776.25287082529, -465.81595181294)

var node6 = ::blueprint::nodes::number::Number()

node6.value = 0

_editor.add_node(node6, -770.55653108705, -534.48612448923)

var node7 = ::blueprint::nodes::number::Number()

node7.value = 0.29

_editor.add_node(node7, -772.81047025064, -600.60183769902)

var node8 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node8, 232.1550422989, -129.1970167096)

var node9 = ::blueprint::nodes::property::Property()

node9.var_name = "rot"
node9.var_type = "bool"

_editor.add_node(node9, 36.2544821828, 52.247335016331)

var node10 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node10, -385.39311802194, -420.36433397982)

var node11 = ::blueprint::nodes::cos::Cos()

_editor.add_node(node11, -242.89950655936, -452.80309719203)

var node12 = ::blueprint::nodes::number::Number()

node12.value = 1

_editor.add_node(node12, -241.18498900035, -389.32658282842)

var node13 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node13, -100.04849161806, -378.56377615999)

var node14 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node14, 45.764236598799, -297.988951352)

var node15 = ::blueprint::nodes::number::Number()

node15.value = 0.22

_editor.add_node(node15, -770.92236061424, -665.71699558168)

var node16 = ::blueprint::nodes::number::Number()

node16.value = 0.26

_editor.add_node(node16, -771.66799364385, -731.86213412686)

var node17 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node17, -353.68589604125, -108.80593193833)

var node18 = ::blueprint::nodes::compare::Compare()

node18.cmp = "greater"

_editor.add_node(node18, -500.40624829125, 143.9009374779)

var node19 = ::blueprint::nodes::integer::Integer()

node19.value = 0

_editor.add_node(node19, -635.26928197699, 107.42854695002)

var node20 = ::blueprint::nodes::switch_f::SwitchF()

_editor.add_node(node20, -631.16232092705, -82.776599058359)

var node21 = ::blueprint::nodes::number::Number()

node21.value = 1

_editor.add_node(node21, -778.9869997509, -16.9821832179)

var node22 = ::blueprint::nodes::number::Number()

node22.value = 0

_editor.add_node(node22, -777.42213637526, -80.484743294292)

var node23 = ::blueprint::nodes::number::Number()

node23.value = 0.29

_editor.add_node(node23, -776.59568605888, -145.77399142188)

var node24 = ::blueprint::nodes::number::Number()

node24.value = 0.2

_editor.add_node(node24, -777.42213687968, -209.41036363343)

var node25 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node25, -621.61347172666, -461.41543263815)

var node26 = ::blueprint::nodes::number::Number()

node26.value = 0.28

_editor.add_node(node26, -779.25643643471, -273.4418556907)

var node27 = ::blueprint::nodes::number::Number()

node27.value = 0.29

_editor.add_node(node27, -781.63920117187, -341.30401787109)

Blueprint.connect(node10, "pi/6", node11, "v")
Blueprint.connect(node12, "v", node13, "a")
Blueprint.connect(node11, "v", node13, "b")
Blueprint.connect(node2, "func", node3, "var")
Blueprint.connect(node0, "var", node25, "v")
Blueprint.connect(node25, "v", node4, "type")
Blueprint.connect(node5, "v", node4, "default")
Blueprint.connect(node6, "v", node4, "case0")
Blueprint.connect(node7, "v", node4, "case1")
Blueprint.connect(node15, "v", node4, "case2")
Blueprint.connect(node16, "v", node4, "case3")
Blueprint.connect(node0, "var", node20, "type")
Blueprint.connect(node21, "v", node20, "default")
Blueprint.connect(node22, "v", node20, "case0")
Blueprint.connect(node23, "v", node20, "case1")
Blueprint.connect(node24, "v", node20, "case2")
Blueprint.connect(node26, "v", node20, "case3")
Blueprint.connect(node27, "v", node20, "case4")
Blueprint.connect(node0, "var", node18, "a")
Blueprint.connect(node19, "v", node18, "b")
Blueprint.connect(node18, "out", node17, "cond")
Blueprint.connect(node20, "result", node17, "true")
Blueprint.connect(node4, "result", node17, "false")
Blueprint.connect(node17, "result", node14, "a")
Blueprint.connect(node13, "v", node14, "b")
Blueprint.connect(node9, "var", node8, "cond")
Blueprint.connect(node14, "v", node8, "true")
Blueprint.connect(node17, "result", node8, "false")
Blueprint.connect(node8, "result", node1, "var")
