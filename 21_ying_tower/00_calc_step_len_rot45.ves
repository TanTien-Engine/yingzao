var node0 = ::blueprint::nodes::func_in::FuncIn()

node0.var_name = "step"
node0.var_type = "int"

_editor.add_node(node0, -487.9221545454, -321.04281354846)

var node1 = ::blueprint::nodes::func_out::FuncOut()

node1.var_name = "len"
node1.var_type = "num"

_editor.add_node(node1, 129.53550364273, -326.79529412097)

var node2 = ::blueprint::nodes::function::Function()

node2.set_size(840.57805773907, 774.65133580623)
node2.title = "calc_step_len"

_editor.add_node(node2, -213.2113985315, 192.9880801818)

var node3 = ::blueprint::nodes::output::Output()

node3.var_name = "func"
node3.var_type = "func"

_editor.add_node(node3, 353.92798721262, 204.1381751991)

var node4 = ::blueprint::nodes::switch_f::SwitchF()

_editor.add_node(node4, -170.50515505187, -363.36364798695)

var node5 = ::blueprint::nodes::number::Number()

node5.value = 0.21

_editor.add_node(node5, -315.50891931832, -367.12022388304)

var node6 = ::blueprint::nodes::number::Number()

node6.value = 0

_editor.add_node(node6, -311.75233779332, -432.48461143537)

var node7 = ::blueprint::nodes::number::Number()

node7.value = 0.29

_editor.add_node(node7, -314.00627695691, -498.60032464516)

var node8 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node8, -243.61150568182, -6.3075306632302)

var node9 = ::blueprint::nodes::cos::Cos()

_editor.add_node(node9, -371.79331276634, -18.125713001598)

var node10 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node10, -512.70242587003, -48.125743519176)

var node11 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node11, -34.650607703968, 19.15409399126)

Blueprint.connect(node10, "pi/4", node9, "v")
Blueprint.connect(node2, "func", node3, "var")
Blueprint.connect(node0, "var", node4, "type")
Blueprint.connect(node5, "v", node4, "default")
Blueprint.connect(node6, "v", node4, "case0")
Blueprint.connect(node7, "v", node4, "case1")
Blueprint.connect(node4, "result", node11, "a")
Blueprint.connect(node9, "v", node11, "b")
Blueprint.connect(node11, "v", node1, "var")
Blueprint.connect(node4, "result", node8, "a")
Blueprint.connect(node9, "v", node8, "b")
