import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant
import "editor.node_cache" for NODE_CACHE
import "archgraph.variant" for PIN_TYPE_ROOT, PIN_TYPE_INNER_GONG, PIN_TYPE_VERT_GONG
import "archgraph.trans_nodes" for TransNodes
import "archgraph.node_helper" for NodeHelper
import "archgraph.component" for Component
import "math" for Math

var LU_DOU = NODE_CACHE.fetch("C:/projects/yingzao/00_dougong2/24_lu_dou.ves", nil)
var C_LU_DOU = NODE_CACHE.fetch("C:/projects/yingzao/00_dougong2/25_c_lu_dou.ves", nil)

class LuDou is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", PIN_TYPE_ROOT),
		]
		this.exports = [
			Pin(this, "hori", PIN_TYPE_INNER_GONG),
			Pin(this, "vert", PIN_TYPE_VERT_GONG),			
		]

		this.layout()

		this.comp = Component()
	}

	calc_value(idx)
	{
		var pos = NodeHelper.calc_curr_pos(this, 0)
		pos = pos.add(Blueprint.calc_output_value(LU_DOU, "pos").value)
		return Variant(pos)
	}

	resolve(dg)
	{
		this.comp.pos = NodeHelper.calc_curr_pos(this, 0)

		this.comp.v_geo = TransNodes.translate(LU_DOU, this.comp.pos)

		this.comp.v_geo_c = TransNodes.transform(C_LU_DOU, this.comp.pos, Math.pi() / 4)
	}

	get_title()
	{
		return "栌枓"
	}
}