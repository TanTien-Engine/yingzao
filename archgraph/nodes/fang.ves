import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "archgraph.variant" for PIN_TYPE_GONG2FANG, PIN_TYPE_FANG2FANG
import "archgraph.node_helper" for NodeHelper
import "editor.node_cache" for NODE_CACHE

var QIXIN_CUT  = NODE_CACHE.fetch("C:/projects/yingzao/00_dougong2/20_qixin_cut_body.ves", nil)

var FANG = NODE_CACHE.fetch("C:/projects/yingzao/00_dougong2/13_fang.ves", nil)

class Fang is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", [ PIN_TYPE_GONG2FANG, PIN_TYPE_FANG2FANG ]),
		]
		this.exports = [
			Pin(this, "next", PIN_TYPE_FANG2FANG),
		]

		this.layout()

		this.next_pos = nil
	}

	resolve()
	{
		var prev = Blueprint.get_input_node(this, 0)

		this.next_pos = prev.next_pos.add(Blueprint.calc_output_value(FANG, "pos").value)
		var geo = NodeHelper.translate_geo(FANG, prev.next_pos)

		// conn prev
		geo = NodeHelper.joint_cut_geo(geo, QIXIN_CUT, prev.next_pos)

		return geo
	}
}