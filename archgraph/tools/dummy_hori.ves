import "blueprint.pin" for Pin
import "blueprint.variant" for Variant
import "archgraph.component.comp_node" for CompNode
import "archgraph.variant" for PIN_TYPE_HORI_GONG, PIN_TYPE_INNER_GONG
import "archgraph.node_helper" for NodeHelper
import "archgraph.constant" for ZU_CAI_HEIGHT
import "maths.vector" for Vector3

class DummyHori is CompNode
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", [ PIN_TYPE_HORI_GONG, PIN_TYPE_INNER_GONG ]),
		]
		this.exports = [
			Pin(this, "next", [ PIN_TYPE_HORI_GONG, PIN_TYPE_INNER_GONG ]),
		]

		this.layout()
	}

	calc_value(idx)
	{
		var pos = NodeHelper.calc_curr_pos(this, "prev")
		return Variant(pos.add(Vector3(0, ZU_CAI_HEIGHT, 0)))
	}

	resolve(dg)
	{
		if (this.comp.x_idx == 0) {
			this.exports[0].type = PIN_TYPE_INNER_GONG
		} else {
			this.exports[0].type = PIN_TYPE_HORI_GONG
		}

		this.comp.pos = NodeHelper.calc_curr_pos(this, "prev")
	}

	get_title()
	{
		return "dummy"
	}
}