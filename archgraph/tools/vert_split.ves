import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "archgraph.component.vert_gong" for VertGong
import "archgraph.variant" for PIN_TYPE_VERT_GONG

class VertSplit is VertGong
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", PIN_TYPE_VERT_GONG),
		]
		this.exports = [
			Pin(this, "outer", PIN_TYPE_VERT_GONG),
			Pin(this, "inner", PIN_TYPE_VERT_GONG)
		]

		this.layout()
	}

	calc_value(idx)
	{
		return Blueprint.calc_input_value(this, "prev")
	}

	resolve(dg)
	{
		import "archgraph.component.beam" for Beam
		
		var prev = Blueprint.get_input_node(this, "prev")
		if (prev is Beam) {
			prev = Blueprint.get_input_node(prev, "prev")
		}
		if (prev is VertGong) {
			this.outer_hop = prev.outer_hop
			this.inner_hop = prev.inner_hop
		} else {
			this.outer_hop = 0
			this.inner_hop = 0		
		}
	}

	get_title()
	{
		return "split"
	}
}