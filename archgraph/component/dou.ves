import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant
import "editor.node_cache" for NODE_CACHE
import "archgraph.component.comp_node" for CompNode
import "archgraph.variant" for VarComp, PIN_TYPE_ROOT, PIN_TYPE_HORI_GONG, VAR_TYPE_COMPONENT
import "archgraph.trans_nodes" for TransNodes
import "archgraph.node_helper" for NodeHelper

var SAN_DOU       = NODE_CACHE.fetch("../yingzao/00_dougong2/21_san_dou.ves", nil)
var JIAOHU_DOU    = NODE_CACHE.fetch("../yingzao/00_dougong2/22_jiaohu_dou.ves", nil)
var JIAOHU_TU_DOU = NODE_CACHE.fetch("../yingzao/00_dougong2/22_jiaohu_tu_dou.ves", nil)
var QIXIN_DOU     = NODE_CACHE.fetch("../yingzao/00_dougong2/23_qixin_dou.ves", nil)
var QIANG_DOU     = NODE_CACHE.fetch("../yingzao/00_dougong2/26_qiang_dou.ves", nil)
var PINGPAN_DOU   = NODE_CACHE.fetch("../yingzao/00_dougong2/27_pingpan_dou.ves", nil)
var LIANZHU_DOU   = NODE_CACHE.fetch("../yingzao/00_dougong2/28_lianzhu_dou.ves", nil)

class Dou is CompNode
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", PIN_TYPE_ROOT),
		]
		this.exports = [
			Pin(this, "next", PIN_TYPE_HORI_GONG),
		]

		this.layout()
	}

	calc_value(idx)
	{
		var pos = NodeHelper.calc_curr_pos(this, "prev")
		pos = pos.add(Blueprint.calc_output_value(JIAOHU_TU_DOU, "pos").value)
		return Variant(pos)
	}

	resolve(dg)
	{
		this.comp.pos   = NodeHelper.calc_curr_pos(this, "prev")
		this.comp.v_geo = TransNodes.translate(JIAOHU_TU_DOU, this.comp.pos)
	}
}