import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for Variant
import "editor.node_cache" for NODE_CACHE
import "archgraph.component.comp_node" for CompNode
import "archgraph.variant" for VarComp, PIN_TYPE_ROOT, PIN_TYPE_INNER_GONG, PIN_TYPE_VERT_GONG, VAR_TYPE_COMPONENT
import "archgraph.trans_nodes" for TransNodes
import "archgraph.node_helper" for NodeHelper
import "archgraph.constant" for QI_HEIGHT
import "maths.vector" for Vector3

var SAN_DOU       = NODE_CACHE.fetch("../yingzao/00_dougong2/21_san_dou.ves", nil)
var JIAOHU_DOU    = NODE_CACHE.fetch("../yingzao/00_dougong2/22_jiaohu_dou.ves", nil)
var JIAOHU_TU_DOU = NODE_CACHE.fetch("../yingzao/00_dougong2/22_jiaohu_tu_dou.ves", nil)
var QIXIN_DOU     = NODE_CACHE.fetch("../yingzao/00_dougong2/23_qixin_dou.ves", nil)
var QIANG_DOU     = NODE_CACHE.fetch("../yingzao/00_dougong2/26_qiang_dou.ves", nil)
var PINGPAN_DOU   = NODE_CACHE.fetch("../yingzao/00_dougong2/27_pingpan_dou.ves", nil)
var LIANZHU_DOU   = NODE_CACHE.fetch("../yingzao/00_dougong2/28_lianzhu_dou.ves", nil)

class Dou is CompNode
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "prev", PIN_TYPE_ROOT),
		]
		this.exports = [
			Pin(this, "hori", PIN_TYPE_INNER_GONG),
			Pin(this, "vert", PIN_TYPE_VERT_GONG)
		]

		this.layout()

		this.dou = nil
	}

	calc_value(idx)
	{
		var pos = NodeHelper.calc_curr_pos(this, "prev")
		return Variant(pos.add(Vector3(0, QI_HEIGHT, 0)))
	}

	resolve(dg)
	{
		this.dou = this.select_dou(dg)

		this.comp.pos   = NodeHelper.calc_curr_pos(this, "prev")
		this.comp.v_geo = TransNodes.translate(this.dou, this.comp.pos)
	}

	get_title()
	{
		if (this.dou == JIAOHU_TU_DOU or this.dou == JIAOHU_DOU) {
			return "交互枓"
		} else if (this.dou == PINGPAN_DOU) {
			return "平盘枓"
		} else {
			return "枓"
		}
	}

	select_dou(dg)
	{
		import "archgraph.component.vert_gong" for VertGong

		var next_v = dg.layers[this.comp.y_idx + 1][0]
		if (next_v.isEmpty) {
			return JIAOHU_TU_DOU
		}

		for (var i in next_v) 
		{
			if (NodeHelper.is_wide_beam_head(i)) {
				return PINGPAN_DOU
			} else if (i is VertGong) {
				return JIAOHU_DOU
			}
		}

		return JIAOHU_TU_DOU
	}

	get_vert_cut_body()
	{
		if (this.dou == JIAOHU_DOU) {
			return NODE_CACHE.fetch("../yingzao/00_dougong2/20_jiaohu_cut_body.ves", nil)
		} else if (this.dou == JIAOHU_TU_DOU) {
			return NODE_CACHE.fetch("../yingzao/00_dougong2/20_jiaohu_outer_cut_body.ves", nil)
		} else {
			return nil
		}
	}

	get_hori_cut_body()
	{
		if (this.dou == JIAOHU_TU_DOU) {
			return NODE_CACHE.fetch("../yingzao/00_dougong2/20_jiaohu_tu_cut_body.ves", nil)
		} else {
			return nil
		}
	}
}