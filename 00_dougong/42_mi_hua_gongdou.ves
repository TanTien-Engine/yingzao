var node0 = ::blueprint::nodes::output::Output()

node0.var_name = "geo"
node0.var_type = "geo"

_editor.add_node(node0, 827.91590795539, 611.38929083644)

var node1 = ::blueprint::nodes::input::Input()

node1.var_name = "hop_count"
node1.var_type = "int"

_editor.add_node(node1, -451.05679657971, 321.1962137143)

var node2 = ::blueprint::nodes::input::Input()

node2.var_name = "pos"
node2.var_type = "num3"

_editor.add_node(node2, -451.99967568298, 250.02063287418)

var node3 = ::blueprint::nodes::subgraph::Subgraph()
node3.load_from_file(_editor, "11_hua_gong_no_cut.ves")
node3.set_prop_value("corner", false)

_editor.add_node(node3, -260.45434488955, 257.10312632905)

var node4 = ::blueprint::nodes::input::Input()

node4.var_name = "calc_step_len"
node4.var_type = "func"

_editor.add_node(node4, -450.30894597429, 184.54421406713)

var node5 = ::blueprint::nodes::subgraph::Subgraph()
node5.load_from_file(_editor, "50_gong_add_dou.ves")

_editor.add_node(node5, 637.96792448164, 555.47220533215)

var node6 = ::geograph::nodes::skew_y::SkewY()

_editor.add_node(node6, 16.42666202233, 677.1692102835)

var node7 = ::blueprint::nodes::number::Number()

node7.value = 1

_editor.add_node(node7, -304.45165116974, 647.11775750462)

var node8 = ::blueprint::nodes::switch_f::SwitchF()

_editor.add_node(node8, 162.0826446281, 699.96076087699)

var node9 = ::geograph::nodes::skew_y::SkewY()

_editor.add_node(node9, 17.109675477695, 584.27938035385)

var node10 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node10, -145.10245004647, 575.26222983449)

var node11 = ::blueprint::nodes::property::Property()

node11.var_name = "rot"
node11.var_type = "int"

_editor.add_node(node11, 16.959409342001, 753.91779538243)

var node12 = ::blueprint::nodes::integer::Integer()

node12.value = 4

_editor.add_node(node12, 248.31831359863, 343.33916625977)

var node13 = ::blueprint::nodes::compare::Compare()

node13.cmp = "equal"

_editor.add_node(node13, 242.09558105469, 489.74768066406)

var node14 = ::blueprint::nodes::integer::Integer()

node14.value = 1

_editor.add_node(node14, 95.095581054688, 462.74771118164)

var node15 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node15, 400.09558105469, 486.74768066406)

var node16 = ::blueprint::nodes::integer::Integer()

node16.value = 3

_editor.add_node(node16, 246.09558105469, 412.74768066406)

Blueprint.connect(node11, "var", node13, "a")
Blueprint.connect(node14, "v", node13, "b")
Blueprint.connect(node13, "out", node15, "cond")
Blueprint.connect(node16, "v", node15, "true")
Blueprint.connect(node12, "v", node15, "false")
Blueprint.connect(node7, "v", node10, "v")
Blueprint.connect(node1, "var", node3, "hop_count")
Blueprint.connect(node2, "var", node3, "pos")
Blueprint.connect(node4, "var", node3, "calc_step_len")
Blueprint.connect(node3, "geo", node9, "geo")
Blueprint.connect(node10, "v", node9, "skew_z")
Blueprint.connect(node3, "geo", node6, "geo")
Blueprint.connect(node7, "v", node6, "skew_z")
Blueprint.connect(node11, "var", node8, "type")
Blueprint.connect(node3, "geo", node8, "default")
Blueprint.connect(node6, "geo", node8, "case0")
Blueprint.connect(node9, "geo", node8, "case1")
Blueprint.connect(node8, "result", node5, "gong")
Blueprint.connect(node3, "pos_left", node5, "pos_left")
Blueprint.connect(node3, "pos_right", node5, "pos_right")
Blueprint.connect(node15, "result", node5, "left_dou")
Blueprint.connect(node15, "result", node5, "right_dou")
Blueprint.connect(node5, "gong_dou", node0, "var")
