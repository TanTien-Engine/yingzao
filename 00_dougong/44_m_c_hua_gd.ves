var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "hop_count"
node0.var_type = "int"

_editor.add_node(node0, -1114.1341926203, 194.75455785405)

var node1 = ::blueprint::nodes::input::Input()

node1.var_name = "pos"
node1.var_type = "num3"

_editor.add_node(node1, 251.0736885319, 1523.5042282536)

var node2 = ::blueprint::nodes::subgraph::Subgraph()
node2.load_from_file(_editor, "11_hua_gong_no_cut.ves")
node2.set_prop_value("corner", false)

_editor.add_node(node2, -906.78042612922, 290.71932170847)

var node3 = ::blueprint::nodes::input::Input()

node3.var_name = "calc_step_len"
node3.var_type = "func"

_editor.add_node(node3, -687.60422330717, 1042.1348647433)

var node4 = ::blueprint::nodes::subgraph::Subgraph()
node4.load_from_file(_editor, "50_gong_add_dou.ves")

_editor.add_node(node4, -638.25980828457, 275.91345432812)

var node5 = ::geograph::nodes::rotate_y::RotateY()
node5.query_param("angle").value = "0"

_editor.add_node(node5, 370.00534356776, 550.05928873561)

var node6 = ::blueprint::nodes::output::Output()

node6.var_name = "gong0"
node6.var_type = "array"

_editor.add_node(node6, 658.52071086096, 104.58274563783)

var node7 = ::blueprint::nodes::output::Output()

node7.var_name = "gong1"
node7.var_type = "array"

_editor.add_node(node7, 657.87424664376, 541.21902976795)

var node8 = ::geograph::nodes::rotate_y::RotateY()
node8.query_param("angle").value = "0"

_editor.add_node(node8, 387.26755164786, 100.54272315664)

var node9 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node9, 245.35781142055, 77.929450683589)

var node10 = ::geograph::nodes::translate_f::TranslateF()

_editor.add_node(node10, 510.66901711116, 533.00346303255)

var node11 = ::geograph::nodes::translate_f::TranslateF()

_editor.add_node(node11, 521.73645552201, 95.137776988634)

var node12 = ::geograph::nodes::skew_y::SkewY()

_editor.add_node(node12, -43.521712676752, 587.7265389939)

var node13 = ::blueprint::nodes::store::Store()

node13.var_name = "pos"

_editor.add_node(node13, 379.41893504724, 1525.4917951191)

var node14 = ::blueprint::nodes::load::Load()

node14.var_name = "pos"

_editor.add_node(node14, 369.84819939149, 481.95092732099)

var node15 = ::blueprint::nodes::load::Load()

node15.var_name = "pos"

_editor.add_node(node15, 395.81640208875, 32.428178647001)

var node16 = ::geograph::nodes::skew_y::SkewY()

_editor.add_node(node16, 244.82584555015, 162.9453969954)

var node17 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node17, 107.30007858907, 142.0613794248)

var node18 = ::blueprint::nodes::function::Function()

node18.set_size(806.71675432006, 548.64763335838)
node18.title = "calc_step_len_hua"

_editor.add_node(node18, -586.36061386235, 1118.085774067)

var node19 = ::blueprint::nodes::func_call::FuncCall()
node19.imports.add(::blueprint::pin::Pin(node19, "step", "int"))
node19.exports.add(::blueprint::pin::Pin(node19, "len", "num"))
node19.layout()

_editor.add_node(node19, -560.29622319823, 1023.1289206823)

var node20 = ::blueprint::nodes::func_in::FuncIn()

node20.var_name = "step"
node20.var_type = "int"

_editor.add_node(node20, -684.84025252421, 989.68999641752)

var node21 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node21, -417.61469705219, 997.37928888595)

var node22 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node22, -747.14807163024, 875.40634580364)

var node23 = ::blueprint::nodes::func_out::FuncOut()

node23.var_name = "len"
node23.var_type = "num"

_editor.add_node(node23, -279.9956964858, 1004.3862097416)

var node24 = ::blueprint::nodes::tan::Tan()

_editor.add_node(node24, -86.738457822864, 306.71142354613)

var node25 = ::blueprint::nodes::property::Property()

node25.var_name = "rot"
node25.var_type = "bool"

_editor.add_node(node25, -856.49563051979, 175.35845573675)

var node26 = ::blueprint::nodes::subgraph::Subgraph()
node26.load_from_file(_editor, "82_compose_hua.ves")

_editor.add_node(node26, 43.381451874999, 690.93896233398)

var node27 = ::blueprint::nodes::subgraph::Subgraph()
node27.load_from_file(_editor, "11_hua_gong_no_cut.ves")
node27.set_prop_value("corner", false)

_editor.add_node(node27, -901.9557079474, -76.432960109713)

var node28 = ::blueprint::nodes::subgraph::Subgraph()
node28.load_from_file(_editor, "50_gong_add_dou.ves")

_editor.add_node(node28, -633.43509010275, -91.238827490063)

var node29 = ::blueprint::nodes::boolean::Boolean()

node29.value = true

_editor.add_node(node29, -853.62679033401, -192.66799159806)

var node30 = ::blueprint::nodes::subgraph::Subgraph()
node30.load_from_file(_editor, "82_compose_hua.ves")

_editor.add_node(node30, 423.91183509814, 262.48267332572)

var node31 = ::blueprint::nodes::property::Property()

node31.var_name = "ping_dou"
node31.var_type = "bool"

_editor.add_node(node31, -1685.2519652312, 778.70321983149)

var node32 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node32, -1538.9383544922, 766.56139127873)

var node33 = ::blueprint::nodes::store::Store()

node33.var_name = "dou"

_editor.add_node(node33, -1400.9218649115, 774.82586367268)

var node34 = ::blueprint::nodes::integer::Integer()

node34.value = 2

_editor.add_node(node34, -1677.78125, 698.79284667969)

var node35 = ::blueprint::nodes::load::Load()

node35.var_name = "dou"

_editor.add_node(node35, -857.632416624, 119.22857647673)

var node36 = ::blueprint::nodes::load::Load()

node36.var_name = "dou"

_editor.add_node(node36, -851.13357228277, -250.30050924146)

var node37 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node37, 991.01171058239, 835.05267329545)

var node38 = ::blueprint::nodes::property::Property()

node38.var_name = "hex"
node38.var_type = "bool"

_editor.add_node(node38, 252.19166148792, 1455.9918168501)

var node39 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node39, 835.3444519908, 734.54528035649)

var node40 = ::blueprint::nodes::store::Store()

node40.var_name = "angle"

_editor.add_node(node40, 1268.4299465252, 913.90630739002)

var node41 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node41, -337.71658177132, 434.01156482413)

var node42 = ::blueprint::nodes::subtract::Subtract()

_editor.add_node(node42, -199.63466704797, 381.22318267907)

var node43 = ::blueprint::nodes::load::Load()

node43.var_name = "angle"

_editor.add_node(node43, -335.01644020831, 340.84403636265)

var node44 = ::blueprint::nodes::subgraph::Subgraph()
node44.load_from_file(_editor, "../../tantien/assets/blueprints/tools/half.ves")

_editor.add_node(node44, -13.951627126938, 374.87768079155)

var node45 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node45, 997.94244562539, 969.25492051008)

var node46 = ::blueprint::nodes::subtract::Subtract()

_editor.add_node(node46, 1135.080694481, 912.54704894354)

var node47 = ::blueprint::nodes::load::Load()

node47.var_name = "angle"

_editor.add_node(node47, 230.83143237161, 534.22801668407)

var node48 = ::blueprint::nodes::load::Load()

node48.var_name = "angle"

_editor.add_node(node48, 114.47950294743, 73.764904598709)

var node49 = ::blueprint::nodes::store::Store()

node49.var_name = "hex"

_editor.add_node(node49, 390.2079745206, 1456.3621160334)

var node50 = ::blueprint::nodes::load::Load()

node50.var_name = "hex"

_editor.add_node(node50, 837.16477272727, 855.91015625)

var node51 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node51, -754.03781097258, 750.04979023024)

var node52 = ::blueprint::nodes::load::Load()

node52.var_name = "hex"

_editor.add_node(node52, -909.14979015001, 837.58884343273)

var node53 = ::blueprint::nodes::sin::Sin()

_editor.add_node(node53, -562.59389211382, 940.6937502837)

var node54 = ::blueprint::nodes::divide::Divide()

_editor.add_node(node54, -578.34182915806, 818.3553048126)

var node55 = ::blueprint::nodes::integer::Integer()

node55.value = 6

_editor.add_node(node55, -908.92028203286, 777.03299530281)

var node56 = ::blueprint::nodes::integer::Integer()

node56.value = 8

_editor.add_node(node56, -906.4409744641, 707.61151425701)

var node57 = ::blueprint::nodes::property::Property()

node57.var_name = "skew"
node57.var_type = "bool"

_editor.add_node(node57, 251.09912109375, 1384.4650878906)

var node58 = ::blueprint::nodes::store::Store()

node58.var_name = "skew"

_editor.add_node(node58, 387.05824412248, 1386.0084420863)

var node59 = ::blueprint::nodes::load::Load()

node59.var_name = "skew"

_editor.add_node(node59, 133.94543295675, 775.77778071509)

var node60 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node60, 266.63851722473, 697.36628247191)

var node61 = ::blueprint::nodes::load::Load()

node61.var_name = "skew"

_editor.add_node(node61, 537.86603655172, 409.81355300744)

var node62 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node62, 670.5591208197, 331.40205476426)

var node63 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node63, 600.76973377575, 811.28740900213)

var node64 = ::blueprint::nodes::subgraph::Subgraph()
node64.load_from_file(_editor, "41_su_fang.ves")
node64.set_prop_value("outside", false)
node64.set_prop_value("narrow", true)

_editor.add_node(node64, -4.1449890136719, 851.91668701172)

var node65 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node65, 1242.3175736361, 322.83285567418)

var node66 = ::blueprint::nodes::subgraph::Subgraph()
node66.load_from_file(_editor, "41_su_fang.ves")
node66.set_prop_value("outside", false)
node66.set_prop_value("narrow", true)

_editor.add_node(node66, 924.43549615777, 228.73809707425)

var node67 = ::blueprint::nodes::property::Property()

node67.var_name = "hide"
node67.var_type = "bool"

_editor.add_node(node67, 258.24124558058, 1309.3700585183)

var node68 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node68, 1105.5020123653, 314.31370514069)

var node69 = ::blueprint::nodes::store::Store()

node69.var_name = "hide"

_editor.add_node(node69, 388.7902632812, 1309.7595920898)

var node70 = ::blueprint::nodes::load::Load()

node70.var_name = "hide"

_editor.add_node(node70, 976.31590457862, 336.53777736833)

var node71 = ::blueprint::nodes::branch_f::BranchF()

_editor.add_node(node71, 424.68527841137, 916.97430834314)

var node72 = ::blueprint::nodes::load::Load()

node72.var_name = "hide"

_editor.add_node(node72, 295.49917062469, 939.19838057078)

Blueprint.connect(node67, "var", node69, "var")
Blueprint.connect(node69, "var", node72, "var")
Blueprint.connect(node69, "var", node70, "var")
Blueprint.connect(node70, "var", node68, "cond")
Blueprint.connect(node66, "geo", node68, "true")
Blueprint.connect(node72, "var", node71, "cond")
Blueprint.connect(node64, "geo", node71, "true")
Blueprint.connect(node57, "var", node58, "var")
Blueprint.connect(node58, "var", node61, "var")
Blueprint.connect(node58, "var", node59, "var")
Blueprint.connect(node41, "pi/4", node24, "v")
Blueprint.connect(node24, "v", node17, "v")
Blueprint.connect(node38, "var", node49, "var")
Blueprint.connect(node49, "var", node52, "var")
Blueprint.connect(node52, "var", node51, "cond")
Blueprint.connect(node55, "v", node51, "true")
Blueprint.connect(node56, "v", node51, "false")
Blueprint.connect(node49, "var", node50, "var")
Blueprint.connect(node50, "var", node37, "cond")
Blueprint.connect(node39, "pi/6", node37, "true")
Blueprint.connect(node39, "pi/8", node37, "false")
Blueprint.connect(node45, "pi/2", node46, "a")
Blueprint.connect(node37, "result", node46, "b")
Blueprint.connect(node46, "v", node40, "var")
Blueprint.connect(node40, "var", node48, "var")
Blueprint.connect(node48, "var", node9, "v")
Blueprint.connect(node40, "var", node47, "var")
Blueprint.connect(node40, "var", node43, "var")
Blueprint.connect(node41, "pi/2", node42, "a")
Blueprint.connect(node43, "var", node42, "b")
Blueprint.connect(node42, "v", node44, "val")
Blueprint.connect(node31, "var", node32, "cond")
Blueprint.connect(node34, "v", node32, "true")
Blueprint.connect(node32, "result", node33, "var")
Blueprint.connect(node33, "var", node36, "var")
Blueprint.connect(node33, "var", node35, "var")
Blueprint.connect(node22, "pi*2", node54, "a")
Blueprint.connect(node51, "result", node54, "b")
Blueprint.connect(node54, "v", node53, "v")
Blueprint.connect(node3, "var", node19, "func")
Blueprint.connect(node20, "var", node19, "step")
Blueprint.connect(node19, "len", node21, "a")
Blueprint.connect(node53, "v", node21, "b")
Blueprint.connect(node21, "v", node23, "var")
Blueprint.connect(node1, "var", node13, "var")
Blueprint.connect(node13, "var", node15, "var")
Blueprint.connect(node13, "var", node14, "var")
Blueprint.connect(node0, "var", node27, "hop_count")
Blueprint.connect(node18, "func", node27, "calc_step_len")
Blueprint.connect(node27, "geo", node28, "gong")
Blueprint.connect(node27, "pos_left", node28, "pos_left")
Blueprint.connect(node27, "pos_right", node28, "pos_right")
Blueprint.connect(node29, "v", node28, "rot_left")
Blueprint.connect(node36, "var", node28, "right_dou")
Blueprint.connect(node0, "var", node2, "hop_count")
Blueprint.connect(node18, "func", node2, "calc_step_len")
Blueprint.connect(node2, "geo", node4, "gong")
Blueprint.connect(node2, "pos_left", node4, "pos_left")
Blueprint.connect(node2, "pos_right", node4, "pos_right")
Blueprint.connect(node25, "var", node4, "rot_left")
Blueprint.connect(node25, "var", node4, "rot_right")
Blueprint.connect(node35, "var", node4, "right_dou")
Blueprint.connect(node4, "gong_dou", node16, "geo")
Blueprint.connect(node17, "v", node16, "skew_z")
Blueprint.connect(node16, "geo", node30, "gong0")
Blueprint.connect(node28, "gong_dou", node30, "gong1")
Blueprint.connect(node61, "var", node62, "cond")
Blueprint.connect(node30, "gong", node62, "true")
Blueprint.connect(node28, "gong_dou", node62, "false")
Blueprint.connect(node62, "result", node65, "in0")
Blueprint.connect(node68, "result", node65, "in1")
Blueprint.connect(node65, "list", node8, "geo")
Blueprint.connect(node9, "v", node8, "angle")
Blueprint.connect(node8, "geo", node11, "geo")
Blueprint.connect(node15, "var", node11, "xyz")
Blueprint.connect(node11, "geo", node6, "var")
Blueprint.connect(node4, "gong_dou", node12, "geo")
Blueprint.connect(node24, "v", node12, "skew_z")
Blueprint.connect(node12, "geo", node26, "gong0")
Blueprint.connect(node28, "gong_dou", node26, "gong1")
Blueprint.connect(node59, "var", node60, "cond")
Blueprint.connect(node26, "gong", node60, "true")
Blueprint.connect(node28, "gong_dou", node60, "false")
Blueprint.connect(node60, "result", node63, "in0")
Blueprint.connect(node71, "result", node63, "in1")
Blueprint.connect(node63, "list", node5, "geo")
Blueprint.connect(node47, "var", node5, "angle")
Blueprint.connect(node5, "geo", node10, "geo")
Blueprint.connect(node14, "var", node10, "xyz")
Blueprint.connect(node10, "geo", node7, "var")
