var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "geo"
node0.var_type = "geo"

_editor.add_node(node0, -27.266811096955, -141.24409660479)

var node1 = ::blueprint::nodes::input::Input()

node1.var_name = "diameter"
node1.var_type = "num"

_editor.add_node(node1, -1007.9110998467, -221.12182738777)

var node2 = ::blueprint::nodes::output::Output()

node2.var_name = "geo"
node2.var_type = "array"

_editor.add_node(node2, 374.5364701246, -138.40075322702)

var node3 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node3, -1192.8454287797, -42.288367692587)

var node4 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node4, -1336.2782626656, -96.929444992337)

var node5 = ::blueprint::nodes::add::Add()

_editor.add_node(node5, -1058.7264287429, -56.569558512297)

var node6 = ::blueprint::nodes::sin::Sin()

_editor.add_node(node6, -908.97660466762, -78.240225053368)

var node7 = ::blueprint::nodes::cos::Cos()

_editor.add_node(node7, -909.70530275262, -21.936521102667)

var node8 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node8, -773.65262701078, -88.032723393578)

var node9 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node9, -631.51223785345, -132.35516391481)

var node10 = ::blueprint::nodes::subgraph::Subgraph()
node10.load_from_file(_editor, "../../tantien/assets/blueprints/tools/half.ves")

_editor.add_node(node10, -820.70697996384, -212.36088411224)

var node11 = ::blueprint::nodes::for_each_f::ForEachF()

_editor.add_node(node11, 96.218898452647, -215.94711983848)

var node12 = ::blueprint::nodes::integer::Integer()

node12.value = 8

_editor.add_node(node12, -54.044061324343, -224.8262754703)

var node13 = ::scenegraph::nodes::transform3d::Transform3d()

_editor.add_node(node13, -56.10469206058, -338.09954084318)

var node14 = ::geograph::nodes::brush_merge::BrushMerge()

_editor.add_node(node14, 109.20792650955, -145.49803107265)

var node15 = ::geograph::nodes::brush_instanced::BrushInstanced()

_editor.add_node(node15, 237.51636536841, -155.24900579046)

var node16 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node16, -905.00125889958, -509.19181933797)

var node17 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node17, -1069.4735756329, -571.01711029295)

var node18 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node18, -471.77154240177, -587.62306286207)

var node19 = ::blueprint::nodes::add::Add()

_editor.add_node(node19, -637.0987717915, -564.94032586099)

var node20 = ::blueprint::nodes::add::Add()

_editor.add_node(node20, -826.91975920451, -595.14671090359)

var node21 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node21, -766.90550378363, -497.32865150427)

var node22 = ::blueprint::nodes::add::Add()

_editor.add_node(node22, -480.41620448332, -253.52896443165)

var node23 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node23, -625.61737598555, -328.75186500133)

var node24 = ::blueprint::nodes::input::Input()

node24.var_name = "dy"
node24.var_type = "num"

_editor.add_node(node24, -769.65222622339, -314.00035862996)

Blueprint.connect(node24, "var", node23, "y")
Blueprint.connect(node17, "pi/8", node20, "a")
Blueprint.connect(node17, "pi/4", node20, "b")
Blueprint.connect(node11, "curr_item", node16, "a")
Blueprint.connect(node17, "pi/4", node16, "b")
Blueprint.connect(node16, "v", node21, "v")
Blueprint.connect(node21, "v", node19, "a")
Blueprint.connect(node20, "v", node19, "b")
Blueprint.connect(node19, "v", node18, "y")
Blueprint.connect(node11, "curr_item", node3, "a")
Blueprint.connect(node4, "pi/4", node3, "b")
Blueprint.connect(node3, "v", node5, "a")
Blueprint.connect(node4, "pi/8", node5, "b")
Blueprint.connect(node5, "v", node7, "v")
Blueprint.connect(node5, "v", node6, "v")
Blueprint.connect(node7, "v", node8, "x")
Blueprint.connect(node6, "v", node8, "z")
Blueprint.connect(node1, "var", node10, "val")
Blueprint.connect(node8, "xyz", node9, "a")
Blueprint.connect(node10, "val", node9, "b")
Blueprint.connect(node9, "v", node22, "a")
Blueprint.connect(node23, "xyz", node22, "b")
Blueprint.connect(node22, "v", node13, "translate")
Blueprint.connect(node18, "xyz", node13, "rotate")
Blueprint.connect(node12, "v", node11, "count")
Blueprint.connect(node13, "mat", node11, "eval")
Blueprint.connect(node0, "var", node14, "list")
Blueprint.connect(node14, "brush", node15, "brush")
Blueprint.connect(node11, "result", node15, "transforms")
Blueprint.connect(node15, "instanced", node2, "var")
