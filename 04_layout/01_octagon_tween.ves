var node0 = ::blueprint::nodes::input::Input()

node0.var_name = "geo"
node0.var_type = "geo"

_editor.add_node(node0, -27.266811096955, -141.24409660479)

var node1 = ::blueprint::nodes::input::Input()

node1.var_name = "diameter"
node1.var_type = "num"

_editor.add_node(node1, -904.02613947972, -109.80599457654)

var node2 = ::blueprint::nodes::output::Output()

node2.var_name = "geo"
node2.var_type = "array"

_editor.add_node(node2, 374.5364701246, -138.40075322702)

var node3 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node3, -820.64431092634, 73.533398842946)

var node4 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node4, -965.1034610487, 37.366013799502)

var node5 = ::blueprint::nodes::sin::Sin()

_editor.add_node(node5, -639.5685925965, -67.463904570523)

var node6 = ::blueprint::nodes::cos::Cos()

_editor.add_node(node6, -640.2972906815, -11.160200619822)

var node7 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node7, -504.24461493966, -77.256402910733)

var node8 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node8, -362.10422578233, -121.57884343197)

var node9 = ::blueprint::nodes::subgraph::Subgraph()
node9.load_from_file(_editor, "../../tantien/assets/blueprints/tools/half.ves")

_editor.add_node(node9, -551.29896789272, -201.5845636294)

var node10 = ::blueprint::nodes::for_each_f::ForEachF()

_editor.add_node(node10, 96.218898452647, -215.94711983848)

var node11 = ::blueprint::nodes::integer::Integer()

node11.value = 8

_editor.add_node(node11, -54.044061324343, -224.8262754703)

var node12 = ::scenegraph::nodes::transform3d::Transform3d()

_editor.add_node(node12, -56.10469206058, -338.09954084318)

var node13 = ::geograph::nodes::brush_merge::BrushMerge()

_editor.add_node(node13, 109.20792650955, -145.49803107265)

var node14 = ::geograph::nodes::brush_instanced::BrushInstanced()

_editor.add_node(node14, 237.51636536841, -155.24900579046)

var node15 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node15, -931.54179677447, -342.19990450333)

var node16 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node16, -1096.0141135078, -404.02519545831)

var node17 = ::blueprint::nodes::combine::Combine()

_editor.add_node(node17, -354.25833332694, -421.87299067355)

var node18 = ::blueprint::nodes::add::Add()

_editor.add_node(node18, -562.56637003857, -425.90330730144)

var node19 = ::blueprint::nodes::negate::Negate()

_editor.add_node(node19, -793.44604165852, -330.33673666963)

var node20 = ::blueprint::nodes::subtract::Subtract()

_editor.add_node(node20, -561.05652148572, -339.37829568848)

var node21 = ::blueprint::nodes::pi::Pi()

_editor.add_node(node21, -1034.6276216252, -227.79069605638)

var node22 = ::blueprint::nodes::cos::Cos()

_editor.add_node(node22, -907.89499575629, -178.32432875315)

var node23 = ::blueprint::nodes::multiply::Multiply()

_editor.add_node(node23, -766.67126672449, -145.48570642914)

Blueprint.connect(node21, "pi/8", node22, "v")
Blueprint.connect(node10, "curr_item", node15, "a")
Blueprint.connect(node16, "pi/4", node15, "b")
Blueprint.connect(node15, "v", node19, "v")
Blueprint.connect(node19, "v", node20, "a")
Blueprint.connect(node16, "pi/2", node20, "b")
Blueprint.connect(node19, "v", node18, "a")
Blueprint.connect(node16, "pi/2", node18, "b")
Blueprint.connect(node18, "v", node17, "y")
Blueprint.connect(node10, "curr_item", node3, "a")
Blueprint.connect(node4, "pi/4", node3, "b")
Blueprint.connect(node3, "v", node6, "v")
Blueprint.connect(node3, "v", node5, "v")
Blueprint.connect(node6, "v", node7, "x")
Blueprint.connect(node5, "v", node7, "z")
Blueprint.connect(node1, "var", node23, "a")
Blueprint.connect(node22, "v", node23, "b")
Blueprint.connect(node23, "v", node9, "val")
Blueprint.connect(node7, "xyz", node8, "a")
Blueprint.connect(node9, "val", node8, "b")
Blueprint.connect(node8, "v", node12, "translate")
Blueprint.connect(node17, "xyz", node12, "rotate")
Blueprint.connect(node11, "v", node10, "count")
Blueprint.connect(node12, "mat", node10, "eval")
Blueprint.connect(node0, "var", node13, "list")
Blueprint.connect(node13, "brush", node14, "brush")
Blueprint.connect(node10, "result", node14, "transforms")
Blueprint.connect(node14, "instanced", node2, "var")
